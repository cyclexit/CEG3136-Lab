


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000                 PRESERVE8                    ;
    4 00000000                 THUMB                        ;
    5 00000000         
    6 00000000         
    7 00000000                 EXPORT           player_check_move_s
    8 00000000         
    9 00000000         player_check_move_s
                               FUNCTION                     ; char player_check
                                                            _move_s(player_t *p
                                                            layer, int row, int
                                                             col);
   10 00000000         ; r0 *player
   11 00000000         ; r1 row
   12 00000000         ; r2 col
   13 00000000         
   14 00000000 E92D 01C0       PUSH             {R6, R7, R8}
   15 00000004 8806            LDRH             R6, [R0]    ; R6 = player->stat
                                                            e
   16 00000006 EA4F 0781       LSL              R7, R1, #2  ; R7 = row << 2
   17 0000000A 4417            ADD              R7, R7, R2  ; R7 = R7 + col
   18 0000000C F04F 0801       MOV              R8, #1      ; R8 = 1
   19 00000010 FA08 F807       LSL              R8, R8, R7  ; R8 = R8 << R7
   20 00000014 EA08 0806       AND              R8, R6      ; R8 = R8 & R6
   21 00000018 F018 0F01       TST              R8, #1
   22 0000001C B910            CBNZ             R0, RET1
   23 0000001E F04F 0000       MOV              R0, #0      ; 
   24 00000022 4770            BX               LR          ; return
   25 00000024         RET1
   26 00000024 F04F 0001       MOV              R0, #1
   27 00000028 4770            BX               LR          ; return
   28 0000002A         
   29 0000002A                 ENDFUNC
   30 0000002A         
   31 0000002A         
   32 0000002A                 EXPORT           player_make_move_s
   33 0000002A         
   34 0000002A         player_make_move_s
                               FUNCTION                     ; char player_make_
                                                            move_s(player_t *pl
                                                            ayer, int row, int 
                                                            col);
   35 0000002A         ; r0 *player
   36 0000002A         ; r1 row
   37 0000002A         ; r2 col
   38 0000002A         
   39 0000002A E92D 03C0       PUSH             {R6, R7, R8, R9}
   40 0000002E 8806            LDRH             R6, [R0]    ; R6 = player->stat
                                                            e
   41 00000030 EA4F 0781       LSL              R7, R1, #2  ; R7 = row << 2
   42 00000034 4417            ADD              R7, R7, R2  ; R7 = R7 + col
   43 00000036 F04F 0801       MOV              R8, #1      ; R8 = 1
   44 0000003A FA08 F807       LSL              R8, R8, R7  ; R8 = R8 << R7
   45 0000003E 46C1            MOV              R9, R8
   46 00000040 EA08 0806       AND              R8, R6      ; R8 = R8 & R6
   47 00000044 F018 0F01       TST              R8, #1
   48 00000048 B910            CBNZ             R0, STORE
   49 0000004A F04F 0000       MOV              R0, #0      ;



ARM Macro Assembler    Page 2 


   50 0000004E 4770            BX               LR          ; return
   51 00000050         STORE
   52 00000050 EA49 0906       ORR              R9, R6      ; R9 |= R6
   53 00000054 F8A0 9000       STRH             R9, [R0]
   54 00000058 F04F 0001       MOV              R0, #1
   55 0000005C 4770            BX               LR          ; return
   56 0000005E         
   57 0000005E                 ENDFUNC
   58 0000005E         
   59 0000005E                 EXPORT           player_won_s
   60 0000005E         
   61 0000005E         player_won_s
                               FUNCTION                     ; char player_won_s
                                                            (player_t * player)
                                                            ;
   62 0000005E         ; r0 *player
   63 0000005E F04F 0000       MOV              R0, #0      ; 
   64 00000062 4770            BX               LR          ; return
   65 00000064                 ENDFUNC
   66 00000064         
   67 00000064                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\player_1.d -o.\objects\player_1.o -I.\RTE\_Target_
1 -IC:\Users\honyl\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -
IC:\Users\honyl\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS
\Device\ST\STM32F4xx\Include --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 533" --predefine="_RTE_ SETA 1" --predefine="STM32F417xx SETA 1" 
--predefine="_RTE_ SETA 1" --list=.\listings\player.lst player.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file player.s
   Uses
      None
Comment: .text unused
RET1 00000024

Symbol: RET1
   Definitions
      At line 25 in file player.s
   Uses
      At line 22 in file player.s
Comment: RET1 used once
STORE 00000050

Symbol: STORE
   Definitions
      At line 51 in file player.s
   Uses
      At line 48 in file player.s
Comment: STORE used once
player_check_move_s 00000000

Symbol: player_check_move_s
   Definitions
      At line 9 in file player.s
   Uses
      At line 7 in file player.s
Comment: player_check_move_s used once
player_make_move_s 0000002A

Symbol: player_make_move_s
   Definitions
      At line 34 in file player.s
   Uses
      At line 32 in file player.s
Comment: player_make_move_s used once
player_won_s 0000005E

Symbol: player_won_s
   Definitions
      At line 61 in file player.s
   Uses
      At line 59 in file player.s
Comment: player_won_s used once
6 symbols
341 symbols in table
