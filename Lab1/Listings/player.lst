


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000                 PRESERVE8                    ;
    4 00000000                 THUMB                        ;
    5 00000000         
    6 00000000         
    7 00000000                 EXPORT           player_check_move_s
    8 00000000         
    9 00000000         player_check_move_s
                               FUNCTION                     ; char player_check
                                                            _move_s(player_t *p
                                                            layer, int row, int
                                                             col);
   10 00000000         ; r0 *player
   11 00000000         ; r1 row
   12 00000000         ; r2 col
   13 00000000         
   14 00000000 B438            PUSH             {R3, R4, R5}
   15 00000002 8803            LDRH             R3, [R0]    ; R3 = player->stat
                                                            e
   16 00000004 EA4F 0481       LSL              R4, R1, #2  ; R4 = row << 2
   17 00000008 4414            ADD              R4, R4, R2  ; R4 = R4 + col
   18 0000000A F04F 0501       MOV              R5, #1      ; R5 = 1
   19 0000000E FA05 F504       LSL              R5, R5, R4  ; R5 = R5 << R4
   20 00000012 EA05 0503       AND              R5, R3      ; R5 = R5 & R3
   21 00000016 F015 0F01       TST              R5, #1
   22 0000001A B910            CBNZ             R0, RET1
   23 0000001C F04F 0000       MOV              R0, #0      ; 
   24 00000020 4770            BX               LR          ; return
   25 00000022         RET1
   26 00000022 F04F 0001       MOV              R0, #1
   27 00000026 4770            BX               LR          ; return
   28 00000028         
   29 00000028                 ENDFUNC
   30 00000028         
   31 00000028         
   32 00000028                 EXPORT           player_make_move_s
   33 00000028         
   34 00000028         player_make_move_s
                               FUNCTION                     ; char player_make_
                                                            move_s(player_t *pl
                                                            ayer, int row, int 
                                                            col);
   35 00000028         ; r0 *player
   36 00000028         ; r1 row
   37 00000028         ; r2 col
   38 00000028         
   39 00000028 B478            PUSH             {R3, R4, R5, R6}
   40 0000002A 8803            LDRH             R3, [R0]    ; R3 = player->stat
                                                            e
   41 0000002C EA4F 0481       LSL              R4, R1, #2  ; R4 = row << 2
   42 00000030 4414            ADD              R4, R4, R2  ; R4 = R4 + col
   43 00000032 F04F 0501       MOV              R5, #1      ; R5 = 1
   44 00000036 FA05 F504       LSL              R5, R5, R4  ; R5 = R5 << R4
   45 0000003A 462E            MOV              R6, R5
   46 0000003C EA05 0503       AND              R5, R3      ; R5 = R5 & R3
   47 00000040 F015 0F01       TST              R5, #1
   48 00000044 B910            CBNZ             R0, STORE
   49 00000046 F04F 0000       MOV              R0, #0      ;



ARM Macro Assembler    Page 2 


   50 0000004A 4770            BX               LR          ; return
   51 0000004C         STORE
   52 0000004C EA46 0603       ORR              R6, R3      ; R6 |= R3
   53 00000050 8006            STRH             R6, [R0]
   54 00000052 F04F 0001       MOV              R0, #1
   55 00000056 4770            BX               LR          ; return
   56 00000058         
   57 00000058                 ENDFUNC
   58 00000058         
   59 00000058                 EXPORT           player_won_s
   60 00000058         
   61 00000058         player_won_s
                               FUNCTION                     ; char player_won_s
                                                            (player_t * player)
                                                            ;
   62 00000058         ; r0 *player
   63 00000058 F04F 0000       MOV              R0, #0      ; 
   64 0000005C 4770            BX               LR          ; return
   65 0000005E                 ENDFUNC
   66 0000005E         
   67 0000005E                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\player_1.d -o.\objects\player_1.o -I.\RTE\_Target_
1 -IC:\Users\honyl\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -
IC:\Users\honyl\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS
\Device\ST\STM32F4xx\Include --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 533" --predefine="_RTE_ SETA 1" --predefine="STM32F417xx SETA 1" 
--predefine="_RTE_ SETA 1" --list=.\listings\player.lst player.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file player.s
   Uses
      None
Comment: .text unused
RET1 00000022

Symbol: RET1
   Definitions
      At line 25 in file player.s
   Uses
      At line 22 in file player.s
Comment: RET1 used once
STORE 0000004C

Symbol: STORE
   Definitions
      At line 51 in file player.s
   Uses
      At line 48 in file player.s
Comment: STORE used once
player_check_move_s 00000000

Symbol: player_check_move_s
   Definitions
      At line 9 in file player.s
   Uses
      At line 7 in file player.s
Comment: player_check_move_s used once
player_make_move_s 00000028

Symbol: player_make_move_s
   Definitions
      At line 34 in file player.s
   Uses
      At line 32 in file player.s
Comment: player_make_move_s used once
player_won_s 00000058

Symbol: player_won_s
   Definitions
      At line 61 in file player.s
   Uses
      At line 59 in file player.s
Comment: player_won_s used once
6 symbols
341 symbols in table
